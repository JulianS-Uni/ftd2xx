# generated by 'clang2py'
# flags '-c -d -e -l ftd2xx.dll -o ftd2xx_win32.py --clang-args=-target x86_64-win32 .\ftd2xx.h'
# -*- coding: utf-8 -*-
#
# TARGET arch is: ['-target', 'x86_64-win32']
# WORD_SIZE is: 4
# POINTER_SIZE is: 8
# LONGDOUBLE_SIZE is: 8
#
import ctypes


c_int128 = ctypes.c_ubyte*16
c_uint128 = c_int128
void = None
if ctypes.sizeof(ctypes.c_longdouble) == 8:
    c_long_double_t = ctypes.c_longdouble
else:
    c_long_double_t = ctypes.c_ubyte*8

# if local wordsize is same as target, keep ctypes pointer function.
if ctypes.sizeof(ctypes.c_void_p) == 8:
    POINTER_T = ctypes.POINTER
else:
    # required to access _ctypes
    import _ctypes
    # Emulate a pointer class using the approriate c_int32/c_int64 type
    # The new class should have :
    # ['__module__', 'from_param', '_type_', '__dict__', '__weakref__', '__doc__']
    # but the class should be submitted to a unique instance for each base type
    # to that if A == B, POINTER_T(A) == POINTER_T(B)
    ctypes._pointer_t_type_cache = {}
    def POINTER_T(pointee):
        # a pointer should have the same length as LONG
        fake_ptr_base_type = ctypes.c_uint32 
        # specific case for c_void_p
        if pointee is None: # VOID pointer type. c_void_p.
            pointee = type(None) # ctypes.c_void_p # ctypes.c_ulong
            clsname = 'c_void'
        else:
            clsname = pointee.__name__
        if clsname in ctypes._pointer_t_type_cache:
            return ctypes._pointer_t_type_cache[clsname]
        # make template
        class _T(_ctypes._SimpleCData,):
            _type_ = 'L'
            _subtype_ = pointee
            def _sub_addr_(self):
                return self.value
            def __repr__(self):
                return '%s(%d)'%(clsname, self.value)
            def contents(self):
                raise TypeError('This is not a ctypes pointer.')
            def __init__(self, **args):
                raise TypeError('This is not a ctypes pointer. It is not instanciable.')
        _class = type('LP_%d_%s'%(8, clsname), (_T,),{}) 
        ctypes._pointer_t_type_cache[clsname] = _class
        return _class

_libraries = {}
try:
    _libraries['ftd2xx.dll'] = ctypes.CDLL('ftd2xx64.dll')
except FileNotFoundError:
    print('Unable to find D2XX64 DLL. Fallback to D2XX32.')
    try:
        _libraries['ftd2xx.dll'] = ctypes.CDLL('ftd2xx.dll')
    except FileNotFoundError:
        raise FileNotFoundError('Unable to find D2XX DLL. Please make sure ftd2xx.dll or ftd2xx64.dll is in the path.')

# .\ftd2xx.h:77
FT_HANDLE = POINTER_T(None)
# .\ftd2xx.h:78
FT_STATUS = ctypes.c_uint32
# .\ftd2xx.h:83

PFT_EVENT_HANDLER = POINTER_T(ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32))
# .\ftd2xx.h:211
FT_DEVICE = ctypes.c_uint32
# .\ftd2xx.h:213

FT_Open = _libraries['ftd2xx.dll'].FT_Open
FT_Open.restype = FT_STATUS
# FT_Open(deviceNumber, pHandle)
FT_Open.argtypes = [ctypes.c_int32, POINTER_T(POINTER_T(None))]
FT_Open.__doc__ = \
    """FT_STATUS FT_Open(c_int32 deviceNumber, LP_LP_None pHandle)
    .\ftd2xx.h:334"""
# .\ftd2xx.h:340
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\winnt.h:408
PVOID = POINTER_T(None)
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\shared\minwindef.h:156
DWORD = ctypes.c_uint32
# .\ftd2xx.h 340
FT_OpenEx = _libraries['ftd2xx.dll'].FT_OpenEx
FT_OpenEx.restype = FT_STATUS
# FT_OpenEx(pArg1, Flags, pHandle)
FT_OpenEx.argtypes = [PVOID, DWORD, POINTER_T(POINTER_T(None))]
FT_OpenEx.__doc__ = \
    """FT_STATUS FT_OpenEx(PVOID pArg1, DWORD Flags, LP_LP_None pHandle)
    .\ftd2xx.h:340"""
# .\ftd2xx.h:347
# .\ftd2xx.h 347
FT_ListDevices = _libraries['ftd2xx.dll'].FT_ListDevices
FT_ListDevices.restype = FT_STATUS
# FT_ListDevices(pArg1, pArg2, Flags)
FT_ListDevices.argtypes = [PVOID, PVOID, DWORD]
FT_ListDevices.__doc__ = \
    """FT_STATUS FT_ListDevices(PVOID pArg1, PVOID pArg2, DWORD Flags)
    .\ftd2xx.h:347"""
# .\ftd2xx.h:354
# .\ftd2xx.h 354
FT_Close = _libraries['ftd2xx.dll'].FT_Close
FT_Close.restype = FT_STATUS
# FT_Close(ftHandle)
FT_Close.argtypes = [FT_HANDLE]
FT_Close.__doc__ = \
    """FT_STATUS FT_Close(FT_HANDLE ftHandle)
    .\ftd2xx.h:354"""
# .\ftd2xx.h:359
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\shared\minwindef.h:173
LPVOID = POINTER_T(None)
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\shared\minwindef.h:172
LPDWORD = POINTER_T(ctypes.c_uint32)
# .\ftd2xx.h 359
FT_Read = _libraries['ftd2xx.dll'].FT_Read
FT_Read.restype = FT_STATUS
# FT_Read(ftHandle, lpBuffer, dwBytesToRead, lpBytesReturned)
FT_Read.argtypes = [FT_HANDLE, LPVOID, DWORD, LPDWORD]
FT_Read.__doc__ = \
    """FT_STATUS FT_Read(FT_HANDLE ftHandle, LPVOID lpBuffer, DWORD dwBytesToRead, LPDWORD lpBytesReturned)
    .\ftd2xx.h:359"""
# .\ftd2xx.h:367
# .\ftd2xx.h 367
FT_Write = _libraries['ftd2xx.dll'].FT_Write
FT_Write.restype = FT_STATUS
# FT_Write(ftHandle, lpBuffer, dwBytesToWrite, lpBytesWritten)
FT_Write.argtypes = [FT_HANDLE, LPVOID, DWORD, LPDWORD]
FT_Write.__doc__ = \
    """FT_STATUS FT_Write(FT_HANDLE ftHandle, LPVOID lpBuffer, DWORD dwBytesToWrite, LPDWORD lpBytesWritten)
    .\ftd2xx.h:367"""
# .\ftd2xx.h:375
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\minwinbase.h:64
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\minwinbase.h:52
class struct__OVERLAPPED(ctypes.Structure):
    pass

LPOVERLAPPED = POINTER_T(struct__OVERLAPPED)
# .\ftd2xx.h 375
FT_IoCtl = _libraries['ftd2xx.dll'].FT_IoCtl
FT_IoCtl.restype = FT_STATUS
# FT_IoCtl(ftHandle, dwIoControlCode, lpInBuf, nInBufSize, lpOutBuf, nOutBufSize, lpBytesReturned, lpOverlapped)
FT_IoCtl.argtypes = [FT_HANDLE, DWORD, LPVOID, DWORD, LPVOID, DWORD, LPDWORD, LPOVERLAPPED]
FT_IoCtl.__doc__ = \
    """FT_STATUS FT_IoCtl(FT_HANDLE ftHandle, DWORD dwIoControlCode, LPVOID lpInBuf, DWORD nInBufSize, LPVOID lpOutBuf, DWORD nOutBufSize, LPDWORD lpBytesReturned, LPOVERLAPPED lpOverlapped)
    .\ftd2xx.h:375"""
# .\ftd2xx.h:387
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\shared\winsmcrd.h:36
ULONG = ctypes.c_uint32
# .\ftd2xx.h 387
FT_SetBaudRate = _libraries['ftd2xx.dll'].FT_SetBaudRate
FT_SetBaudRate.restype = FT_STATUS
# FT_SetBaudRate(ftHandle, BaudRate)
FT_SetBaudRate.argtypes = [FT_HANDLE, ULONG]
FT_SetBaudRate.__doc__ = \
    """FT_STATUS FT_SetBaudRate(FT_HANDLE ftHandle, ULONG BaudRate)
    .\ftd2xx.h:387"""
# .\ftd2xx.h:393
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\shared\wtypesbase.h:146
USHORT = ctypes.c_uint16
# .\ftd2xx.h 393
FT_SetDivisor = _libraries['ftd2xx.dll'].FT_SetDivisor
FT_SetDivisor.restype = FT_STATUS
# FT_SetDivisor(ftHandle, Divisor)
FT_SetDivisor.argtypes = [FT_HANDLE, USHORT]
FT_SetDivisor.__doc__ = \
    """FT_STATUS FT_SetDivisor(FT_HANDLE ftHandle, USHORT Divisor)
    .\ftd2xx.h:393"""
# .\ftd2xx.h:399
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\shared\winsmcrd.h:38
UCHAR = ctypes.c_ubyte
# .\ftd2xx.h 399
FT_SetDataCharacteristics = _libraries['ftd2xx.dll'].FT_SetDataCharacteristics
FT_SetDataCharacteristics.restype = FT_STATUS
# FT_SetDataCharacteristics(ftHandle, WordLength, StopBits, Parity)
FT_SetDataCharacteristics.argtypes = [FT_HANDLE, UCHAR, UCHAR, UCHAR]
FT_SetDataCharacteristics.__doc__ = \
    """FT_STATUS FT_SetDataCharacteristics(FT_HANDLE ftHandle, UCHAR WordLength, UCHAR StopBits, UCHAR Parity)
    .\ftd2xx.h:399"""
# .\ftd2xx.h:407
# .\ftd2xx.h 407
FT_SetFlowControl = _libraries['ftd2xx.dll'].FT_SetFlowControl
FT_SetFlowControl.restype = FT_STATUS
# FT_SetFlowControl(ftHandle, FlowControl, XonChar, XoffChar)
FT_SetFlowControl.argtypes = [FT_HANDLE, USHORT, UCHAR, UCHAR]
FT_SetFlowControl.__doc__ = \
    """FT_STATUS FT_SetFlowControl(FT_HANDLE ftHandle, USHORT FlowControl, UCHAR XonChar, UCHAR XoffChar)
    .\ftd2xx.h:407"""
# .\ftd2xx.h:415
# .\ftd2xx.h 415
FT_ResetDevice = _libraries['ftd2xx.dll'].FT_ResetDevice
FT_ResetDevice.restype = FT_STATUS
# FT_ResetDevice(ftHandle)
FT_ResetDevice.argtypes = [FT_HANDLE]
FT_ResetDevice.__doc__ = \
    """FT_STATUS FT_ResetDevice(FT_HANDLE ftHandle)
    .\ftd2xx.h:415"""
# .\ftd2xx.h:420
# .\ftd2xx.h 420
FT_SetDtr = _libraries['ftd2xx.dll'].FT_SetDtr
FT_SetDtr.restype = FT_STATUS
# FT_SetDtr(ftHandle)
FT_SetDtr.argtypes = [FT_HANDLE]
FT_SetDtr.__doc__ = \
    """FT_STATUS FT_SetDtr(FT_HANDLE ftHandle)
    .\ftd2xx.h:420"""
# .\ftd2xx.h:425
# .\ftd2xx.h 425
FT_ClrDtr = _libraries['ftd2xx.dll'].FT_ClrDtr
FT_ClrDtr.restype = FT_STATUS
# FT_ClrDtr(ftHandle)
FT_ClrDtr.argtypes = [FT_HANDLE]
FT_ClrDtr.__doc__ = \
    """FT_STATUS FT_ClrDtr(FT_HANDLE ftHandle)
    .\ftd2xx.h:425"""
# .\ftd2xx.h:430
# .\ftd2xx.h 430
FT_SetRts = _libraries['ftd2xx.dll'].FT_SetRts
FT_SetRts.restype = FT_STATUS
# FT_SetRts(ftHandle)
FT_SetRts.argtypes = [FT_HANDLE]
FT_SetRts.__doc__ = \
    """FT_STATUS FT_SetRts(FT_HANDLE ftHandle)
    .\ftd2xx.h:430"""
# .\ftd2xx.h:435
# .\ftd2xx.h 435
FT_ClrRts = _libraries['ftd2xx.dll'].FT_ClrRts
FT_ClrRts.restype = FT_STATUS
# FT_ClrRts(ftHandle)
FT_ClrRts.argtypes = [FT_HANDLE]
FT_ClrRts.__doc__ = \
    """FT_STATUS FT_ClrRts(FT_HANDLE ftHandle)
    .\ftd2xx.h:435"""
# .\ftd2xx.h:440
# .\ftd2xx.h 440
FT_GetModemStatus = _libraries['ftd2xx.dll'].FT_GetModemStatus
FT_GetModemStatus.restype = FT_STATUS
# FT_GetModemStatus(ftHandle, pModemStatus)
FT_GetModemStatus.argtypes = [FT_HANDLE, POINTER_T(ctypes.c_uint32)]
FT_GetModemStatus.__doc__ = \
    """FT_STATUS FT_GetModemStatus(FT_HANDLE ftHandle, LP_c_uint32 pModemStatus)
    .\ftd2xx.h:440"""
# .\ftd2xx.h:446
# .\ftd2xx.h 446
FT_SetChars = _libraries['ftd2xx.dll'].FT_SetChars
FT_SetChars.restype = FT_STATUS
# FT_SetChars(ftHandle, EventChar, EventCharEnabled, ErrorChar, ErrorCharEnabled)
FT_SetChars.argtypes = [FT_HANDLE, UCHAR, UCHAR, UCHAR, UCHAR]
FT_SetChars.__doc__ = \
    """FT_STATUS FT_SetChars(FT_HANDLE ftHandle, UCHAR EventChar, UCHAR EventCharEnabled, UCHAR ErrorChar, UCHAR ErrorCharEnabled)
    .\ftd2xx.h:446"""
# .\ftd2xx.h:455
# .\ftd2xx.h 455
FT_Purge = _libraries['ftd2xx.dll'].FT_Purge
FT_Purge.restype = FT_STATUS
# FT_Purge(ftHandle, Mask)
FT_Purge.argtypes = [FT_HANDLE, ULONG]
FT_Purge.__doc__ = \
    """FT_STATUS FT_Purge(FT_HANDLE ftHandle, ULONG Mask)
    .\ftd2xx.h:455"""
# .\ftd2xx.h:461
# .\ftd2xx.h 461
FT_SetTimeouts = _libraries['ftd2xx.dll'].FT_SetTimeouts
FT_SetTimeouts.restype = FT_STATUS
# FT_SetTimeouts(ftHandle, ReadTimeout, WriteTimeout)
FT_SetTimeouts.argtypes = [FT_HANDLE, ULONG, ULONG]
FT_SetTimeouts.__doc__ = \
    """FT_STATUS FT_SetTimeouts(FT_HANDLE ftHandle, ULONG ReadTimeout, ULONG WriteTimeout)
    .\ftd2xx.h:461"""
# .\ftd2xx.h:468
# .\ftd2xx.h 468
FT_GetQueueStatus = _libraries['ftd2xx.dll'].FT_GetQueueStatus
FT_GetQueueStatus.restype = FT_STATUS
# FT_GetQueueStatus(ftHandle, dwRxBytes)
FT_GetQueueStatus.argtypes = [FT_HANDLE, POINTER_T(ctypes.c_uint32)]
FT_GetQueueStatus.__doc__ = \
    """FT_STATUS FT_GetQueueStatus(FT_HANDLE ftHandle, LP_c_uint32 dwRxBytes)
    .\ftd2xx.h:468"""
# .\ftd2xx.h:474
# .\ftd2xx.h 474
FT_SetEventNotification = _libraries['ftd2xx.dll'].FT_SetEventNotification
FT_SetEventNotification.restype = FT_STATUS
# FT_SetEventNotification(ftHandle, Mask, Param)
FT_SetEventNotification.argtypes = [FT_HANDLE, DWORD, PVOID]
FT_SetEventNotification.__doc__ = \
    """FT_STATUS FT_SetEventNotification(FT_HANDLE ftHandle, DWORD Mask, PVOID Param)
    .\ftd2xx.h:474"""
# .\ftd2xx.h:481
# .\ftd2xx.h 481
FT_GetStatus = _libraries['ftd2xx.dll'].FT_GetStatus
FT_GetStatus.restype = FT_STATUS
# FT_GetStatus(ftHandle, dwRxBytes, dwTxBytes, dwEventDWord)
FT_GetStatus.argtypes = [FT_HANDLE, POINTER_T(ctypes.c_uint32), POINTER_T(ctypes.c_uint32), POINTER_T(ctypes.c_uint32)]
FT_GetStatus.__doc__ = \
    """FT_STATUS FT_GetStatus(FT_HANDLE ftHandle, LP_c_uint32 dwRxBytes, LP_c_uint32 dwTxBytes, LP_c_uint32 dwEventDWord)
    .\ftd2xx.h:481"""
# .\ftd2xx.h:489
# .\ftd2xx.h 489
FT_SetBreakOn = _libraries['ftd2xx.dll'].FT_SetBreakOn
FT_SetBreakOn.restype = FT_STATUS
# FT_SetBreakOn(ftHandle)
FT_SetBreakOn.argtypes = [FT_HANDLE]
FT_SetBreakOn.__doc__ = \
    """FT_STATUS FT_SetBreakOn(FT_HANDLE ftHandle)
    .\ftd2xx.h:489"""
# .\ftd2xx.h:494
# .\ftd2xx.h 494
FT_SetBreakOff = _libraries['ftd2xx.dll'].FT_SetBreakOff
FT_SetBreakOff.restype = FT_STATUS
# FT_SetBreakOff(ftHandle)
FT_SetBreakOff.argtypes = [FT_HANDLE]
FT_SetBreakOff.__doc__ = \
    """FT_STATUS FT_SetBreakOff(FT_HANDLE ftHandle)
    .\ftd2xx.h:494"""
# .\ftd2xx.h:499
# .\ftd2xx.h 499
FT_SetWaitMask = _libraries['ftd2xx.dll'].FT_SetWaitMask
FT_SetWaitMask.restype = FT_STATUS
# FT_SetWaitMask(ftHandle, Mask)
FT_SetWaitMask.argtypes = [FT_HANDLE, DWORD]
FT_SetWaitMask.__doc__ = \
    """FT_STATUS FT_SetWaitMask(FT_HANDLE ftHandle, DWORD Mask)
    .\ftd2xx.h:499"""
# .\ftd2xx.h:505
# .\ftd2xx.h 505
FT_WaitOnMask = _libraries['ftd2xx.dll'].FT_WaitOnMask
FT_WaitOnMask.restype = FT_STATUS
# FT_WaitOnMask(ftHandle, Mask)
FT_WaitOnMask.argtypes = [FT_HANDLE, POINTER_T(ctypes.c_uint32)]
FT_WaitOnMask.__doc__ = \
    """FT_STATUS FT_WaitOnMask(FT_HANDLE ftHandle, LP_c_uint32 Mask)
    .\ftd2xx.h:505"""
# .\ftd2xx.h:511
# .\ftd2xx.h 511
FT_GetEventStatus = _libraries['ftd2xx.dll'].FT_GetEventStatus
FT_GetEventStatus.restype = FT_STATUS
# FT_GetEventStatus(ftHandle, dwEventDWord)
FT_GetEventStatus.argtypes = [FT_HANDLE, POINTER_T(ctypes.c_uint32)]
FT_GetEventStatus.__doc__ = \
    """FT_STATUS FT_GetEventStatus(FT_HANDLE ftHandle, LP_c_uint32 dwEventDWord)
    .\ftd2xx.h:511"""
# .\ftd2xx.h:517
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\shared\minwindef.h:169
LPWORD = POINTER_T(ctypes.c_uint16)
# .\ftd2xx.h 517
FT_ReadEE = _libraries['ftd2xx.dll'].FT_ReadEE
FT_ReadEE.restype = FT_STATUS
# FT_ReadEE(ftHandle, dwWordOffset, lpwValue)
FT_ReadEE.argtypes = [FT_HANDLE, DWORD, LPWORD]
FT_ReadEE.__doc__ = \
    """FT_STATUS FT_ReadEE(FT_HANDLE ftHandle, DWORD dwWordOffset, LPWORD lpwValue)
    .\ftd2xx.h:517"""
# .\ftd2xx.h:524
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\shared\minwindef.h:159
WORD = ctypes.c_uint16
# .\ftd2xx.h 524
FT_WriteEE = _libraries['ftd2xx.dll'].FT_WriteEE
FT_WriteEE.restype = FT_STATUS
# FT_WriteEE(ftHandle, dwWordOffset, wValue)
FT_WriteEE.argtypes = [FT_HANDLE, DWORD, WORD]
FT_WriteEE.__doc__ = \
    """FT_STATUS FT_WriteEE(FT_HANDLE ftHandle, DWORD dwWordOffset, WORD wValue)
    .\ftd2xx.h:524"""
# .\ftd2xx.h:531
# .\ftd2xx.h 531
FT_EraseEE = _libraries['ftd2xx.dll'].FT_EraseEE
FT_EraseEE.restype = FT_STATUS
# FT_EraseEE(ftHandle)
FT_EraseEE.argtypes = [FT_HANDLE]
FT_EraseEE.__doc__ = \
    """FT_STATUS FT_EraseEE(FT_HANDLE ftHandle)
    .\ftd2xx.h:531"""
# .\ftd2xx.h:539
class struct_ft_program_data(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # .\ftd2xx.h 539
    ('Signature1', ctypes.c_uint32),
    ('Signature2', ctypes.c_uint32),
    ('Version', ctypes.c_uint32),
    ('VendorId', ctypes.c_uint16),
    ('ProductId', ctypes.c_uint16),
    ('Manufacturer', POINTER_T(ctypes.c_char)),
    ('ManufacturerId', POINTER_T(ctypes.c_char)),
    ('Description', POINTER_T(ctypes.c_char)),
    ('SerialNumber', POINTER_T(ctypes.c_char)),
    ('MaxPower', ctypes.c_uint16),
    ('PnP', ctypes.c_uint16),
    ('SelfPowered', ctypes.c_uint16),
    ('RemoteWakeup', ctypes.c_uint16),
    ('Rev4', ctypes.c_ubyte),
    ('IsoIn', ctypes.c_ubyte),
    ('IsoOut', ctypes.c_ubyte),
    ('PullDownEnable', ctypes.c_ubyte),
    ('SerNumEnable', ctypes.c_ubyte),
    ('USBVersionEnable', ctypes.c_ubyte),
    ('USBVersion', ctypes.c_uint16),
    ('Rev5', ctypes.c_ubyte),
    ('IsoInA', ctypes.c_ubyte),
    ('IsoInB', ctypes.c_ubyte),
    ('IsoOutA', ctypes.c_ubyte),
    ('IsoOutB', ctypes.c_ubyte),
    ('PullDownEnable5', ctypes.c_ubyte),
    ('SerNumEnable5', ctypes.c_ubyte),
    ('USBVersionEnable5', ctypes.c_ubyte),
    ('USBVersion5', ctypes.c_uint16),
    ('AIsHighCurrent', ctypes.c_ubyte),
    ('BIsHighCurrent', ctypes.c_ubyte),
    ('IFAIsFifo', ctypes.c_ubyte),
    ('IFAIsFifoTar', ctypes.c_ubyte),
    ('IFAIsFastSer', ctypes.c_ubyte),
    ('AIsVCP', ctypes.c_ubyte),
    ('IFBIsFifo', ctypes.c_ubyte),
    ('IFBIsFifoTar', ctypes.c_ubyte),
    ('IFBIsFastSer', ctypes.c_ubyte),
    ('BIsVCP', ctypes.c_ubyte),
    ('UseExtOsc', ctypes.c_ubyte),
    ('HighDriveIOs', ctypes.c_ubyte),
    ('EndpointSize', ctypes.c_ubyte),
    ('PullDownEnableR', ctypes.c_ubyte),
    ('SerNumEnableR', ctypes.c_ubyte),
    ('InvertTXD', ctypes.c_ubyte),
    ('InvertRXD', ctypes.c_ubyte),
    ('InvertRTS', ctypes.c_ubyte),
    ('InvertCTS', ctypes.c_ubyte),
    ('InvertDTR', ctypes.c_ubyte),
    ('InvertDSR', ctypes.c_ubyte),
    ('InvertDCD', ctypes.c_ubyte),
    ('InvertRI', ctypes.c_ubyte),
    ('Cbus0', ctypes.c_ubyte),
    ('Cbus1', ctypes.c_ubyte),
    ('Cbus2', ctypes.c_ubyte),
    ('Cbus3', ctypes.c_ubyte),
    ('Cbus4', ctypes.c_ubyte),
    ('RIsD2XX', ctypes.c_ubyte),
    ('PullDownEnable7', ctypes.c_ubyte),
    ('SerNumEnable7', ctypes.c_ubyte),
    ('ALSlowSlew', ctypes.c_ubyte),
    ('ALSchmittInput', ctypes.c_ubyte),
    ('ALDriveCurrent', ctypes.c_ubyte),
    ('AHSlowSlew', ctypes.c_ubyte),
    ('AHSchmittInput', ctypes.c_ubyte),
    ('AHDriveCurrent', ctypes.c_ubyte),
    ('BLSlowSlew', ctypes.c_ubyte),
    ('BLSchmittInput', ctypes.c_ubyte),
    ('BLDriveCurrent', ctypes.c_ubyte),
    ('BHSlowSlew', ctypes.c_ubyte),
    ('BHSchmittInput', ctypes.c_ubyte),
    ('BHDriveCurrent', ctypes.c_ubyte),
    ('IFAIsFifo7', ctypes.c_ubyte),
    ('IFAIsFifoTar7', ctypes.c_ubyte),
    ('IFAIsFastSer7', ctypes.c_ubyte),
    ('AIsVCP7', ctypes.c_ubyte),
    ('IFBIsFifo7', ctypes.c_ubyte),
    ('IFBIsFifoTar7', ctypes.c_ubyte),
    ('IFBIsFastSer7', ctypes.c_ubyte),
    ('BIsVCP7', ctypes.c_ubyte),
    ('PowerSaveEnable', ctypes.c_ubyte),
    ('PullDownEnable8', ctypes.c_ubyte),
    ('SerNumEnable8', ctypes.c_ubyte),
    ('ASlowSlew', ctypes.c_ubyte),
    ('ASchmittInput', ctypes.c_ubyte),
    ('ADriveCurrent', ctypes.c_ubyte),
    ('BSlowSlew', ctypes.c_ubyte),
    ('BSchmittInput', ctypes.c_ubyte),
    ('BDriveCurrent', ctypes.c_ubyte),
    ('CSlowSlew', ctypes.c_ubyte),
    ('CSchmittInput', ctypes.c_ubyte),
    ('CDriveCurrent', ctypes.c_ubyte),
    ('DSlowSlew', ctypes.c_ubyte),
    ('DSchmittInput', ctypes.c_ubyte),
    ('DDriveCurrent', ctypes.c_ubyte),
    ('ARIIsTXDEN', ctypes.c_ubyte),
    ('BRIIsTXDEN', ctypes.c_ubyte),
    ('CRIIsTXDEN', ctypes.c_ubyte),
    ('DRIIsTXDEN', ctypes.c_ubyte),
    ('AIsVCP8', ctypes.c_ubyte),
    ('BIsVCP8', ctypes.c_ubyte),
    ('CIsVCP8', ctypes.c_ubyte),
    ('DIsVCP8', ctypes.c_ubyte),
    ('PullDownEnableH', ctypes.c_ubyte),
    ('SerNumEnableH', ctypes.c_ubyte),
    ('ACSlowSlewH', ctypes.c_ubyte),
    ('ACSchmittInputH', ctypes.c_ubyte),
    ('ACDriveCurrentH', ctypes.c_ubyte),
    ('ADSlowSlewH', ctypes.c_ubyte),
    ('ADSchmittInputH', ctypes.c_ubyte),
    ('ADDriveCurrentH', ctypes.c_ubyte),
    ('Cbus0H', ctypes.c_ubyte),
    ('Cbus1H', ctypes.c_ubyte),
    ('Cbus2H', ctypes.c_ubyte),
    ('Cbus3H', ctypes.c_ubyte),
    ('Cbus4H', ctypes.c_ubyte),
    ('Cbus5H', ctypes.c_ubyte),
    ('Cbus6H', ctypes.c_ubyte),
    ('Cbus7H', ctypes.c_ubyte),
    ('Cbus8H', ctypes.c_ubyte),
    ('Cbus9H', ctypes.c_ubyte),
    ('IsFifoH', ctypes.c_ubyte),
    ('IsFifoTarH', ctypes.c_ubyte),
    ('IsFastSerH', ctypes.c_ubyte),
    ('IsFT1248H', ctypes.c_ubyte),
    ('FT1248CpolH', ctypes.c_ubyte),
    ('FT1248LsbH', ctypes.c_ubyte),
    ('FT1248FlowControlH', ctypes.c_ubyte),
    ('IsVCPH', ctypes.c_ubyte),
    ('PowerSaveEnableH', ctypes.c_ubyte),
    ('PADDING_0', ctypes.c_ubyte),
     ]

# .\ftd2xx.h:697
FT_PROGRAM_DATA = struct_ft_program_data
# .\ftd2xx.h:697
# .\ftd2xx.h:539
PFT_PROGRAM_DATA = POINTER_T(struct_ft_program_data)
# .\ftd2xx.h:700
# .\ftd2xx.h 700
FT_EE_Program = _libraries['ftd2xx.dll'].FT_EE_Program
FT_EE_Program.restype = FT_STATUS
# FT_EE_Program(ftHandle, pData)
FT_EE_Program.argtypes = [FT_HANDLE, PFT_PROGRAM_DATA]
FT_EE_Program.__doc__ = \
    """FT_STATUS FT_EE_Program(FT_HANDLE ftHandle, PFT_PROGRAM_DATA pData)
    .\ftd2xx.h:700"""
# .\ftd2xx.h:706
# .\ftd2xx.h 706
FT_EE_ProgramEx = _libraries['ftd2xx.dll'].FT_EE_ProgramEx
FT_EE_ProgramEx.restype = FT_STATUS
# FT_EE_ProgramEx(ftHandle, pData, Manufacturer, ManufacturerId, Description, SerialNumber)
FT_EE_ProgramEx.argtypes = [FT_HANDLE, PFT_PROGRAM_DATA, POINTER_T(ctypes.c_char), POINTER_T(ctypes.c_char), POINTER_T(ctypes.c_char), POINTER_T(ctypes.c_char)]
FT_EE_ProgramEx.__doc__ = \
    """FT_STATUS FT_EE_ProgramEx(FT_HANDLE ftHandle, PFT_PROGRAM_DATA pData, LP_c_char Manufacturer, LP_c_char ManufacturerId, LP_c_char Description, LP_c_char SerialNumber)
    .\ftd2xx.h:706"""
# .\ftd2xx.h:716
# .\ftd2xx.h 716
FT_EE_Read = _libraries['ftd2xx.dll'].FT_EE_Read
FT_EE_Read.restype = FT_STATUS
# FT_EE_Read(ftHandle, pData)
FT_EE_Read.argtypes = [FT_HANDLE, PFT_PROGRAM_DATA]
FT_EE_Read.__doc__ = \
    """FT_STATUS FT_EE_Read(FT_HANDLE ftHandle, PFT_PROGRAM_DATA pData)
    .\ftd2xx.h:716"""
# .\ftd2xx.h:722
# .\ftd2xx.h 722
FT_EE_ReadEx = _libraries['ftd2xx.dll'].FT_EE_ReadEx
FT_EE_ReadEx.restype = FT_STATUS
# FT_EE_ReadEx(ftHandle, pData, Manufacturer, ManufacturerId, Description, SerialNumber)
FT_EE_ReadEx.argtypes = [FT_HANDLE, PFT_PROGRAM_DATA, POINTER_T(ctypes.c_char), POINTER_T(ctypes.c_char), POINTER_T(ctypes.c_char), POINTER_T(ctypes.c_char)]
FT_EE_ReadEx.__doc__ = \
    """FT_STATUS FT_EE_ReadEx(FT_HANDLE ftHandle, PFT_PROGRAM_DATA pData, LP_c_char Manufacturer, LP_c_char ManufacturerId, LP_c_char Description, LP_c_char SerialNumber)
    .\ftd2xx.h:722"""
# .\ftd2xx.h:732
# .\ftd2xx.h 732
FT_EE_UASize = _libraries['ftd2xx.dll'].FT_EE_UASize
FT_EE_UASize.restype = FT_STATUS
# FT_EE_UASize(ftHandle, lpdwSize)
FT_EE_UASize.argtypes = [FT_HANDLE, LPDWORD]
FT_EE_UASize.__doc__ = \
    """FT_STATUS FT_EE_UASize(FT_HANDLE ftHandle, LPDWORD lpdwSize)
    .\ftd2xx.h:732"""
# .\ftd2xx.h:738
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\shared\minwindef.h:56
PUCHAR = POINTER_T(ctypes.c_ubyte)
# .\ftd2xx.h 738
FT_EE_UAWrite = _libraries['ftd2xx.dll'].FT_EE_UAWrite
FT_EE_UAWrite.restype = FT_STATUS
# FT_EE_UAWrite(ftHandle, pucData, dwDataLen)
FT_EE_UAWrite.argtypes = [FT_HANDLE, PUCHAR, DWORD]
FT_EE_UAWrite.__doc__ = \
    """FT_STATUS FT_EE_UAWrite(FT_HANDLE ftHandle, PUCHAR pucData, DWORD dwDataLen)
    .\ftd2xx.h:738"""
# .\ftd2xx.h:745
# .\ftd2xx.h 745
FT_EE_UARead = _libraries['ftd2xx.dll'].FT_EE_UARead
FT_EE_UARead.restype = FT_STATUS
# FT_EE_UARead(ftHandle, pucData, dwDataLen, lpdwBytesRead)
FT_EE_UARead.argtypes = [FT_HANDLE, PUCHAR, DWORD, LPDWORD]
FT_EE_UARead.__doc__ = \
    """FT_STATUS FT_EE_UARead(FT_HANDLE ftHandle, PUCHAR pucData, DWORD dwDataLen, LPDWORD lpdwBytesRead)
    .\ftd2xx.h:745"""
# .\ftd2xx.h:753
class struct_ft_eeprom_header(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # .\ftd2xx.h 753
    ('deviceType', ctypes.c_uint32),
    ('VendorId', ctypes.c_uint16),
    ('ProductId', ctypes.c_uint16),
    ('SerNumEnable', ctypes.c_ubyte),
    ('PADDING_0', ctypes.c_ubyte),
    ('MaxPower', ctypes.c_uint16),
    ('SelfPowered', ctypes.c_ubyte),
    ('RemoteWakeup', ctypes.c_ubyte),
    ('PullDownEnable', ctypes.c_ubyte),
    ('PADDING_1', ctypes.c_ubyte),
     ]

# .\ftd2xx.h:765
# .\ftd2xx.h:753
PFT_EEPROM_HEADER = POINTER_T(struct_ft_eeprom_header)
# .\ftd2xx.h:765
FT_EEPROM_HEADER = struct_ft_eeprom_header
# .\ftd2xx.h:769
class struct_ft_eeprom_232b(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # .\ftd2xx.h 769
    ('common', FT_EEPROM_HEADER),
     ]

# .\ftd2xx.h:772
# .\ftd2xx.h:769
PFT_EEPROM_232B = POINTER_T(struct_ft_eeprom_232b)
# .\ftd2xx.h:772
FT_EEPROM_232B = struct_ft_eeprom_232b
# .\ftd2xx.h:776
class struct_ft_eeprom_2232(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # .\ftd2xx.h 776
    ('common', FT_EEPROM_HEADER),
    ('AIsHighCurrent', ctypes.c_ubyte),
    ('BIsHighCurrent', ctypes.c_ubyte),
    ('AIsFifo', ctypes.c_ubyte),
    ('AIsFifoTar', ctypes.c_ubyte),
    ('AIsFastSer', ctypes.c_ubyte),
    ('BIsFifo', ctypes.c_ubyte),
    ('BIsFifoTar', ctypes.c_ubyte),
    ('BIsFastSer', ctypes.c_ubyte),
    ('ADriverType', ctypes.c_ubyte),
    ('BDriverType', ctypes.c_ubyte),
    ('PADDING_0', ctypes.c_ubyte * 2),
     ]

# .\ftd2xx.h:792
FT_EEPROM_2232 = struct_ft_eeprom_2232
# .\ftd2xx.h:792
# .\ftd2xx.h:776
PFT_EEPROM_2232 = POINTER_T(struct_ft_eeprom_2232)
# .\ftd2xx.h:796
class struct_ft_eeprom_232r(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # .\ftd2xx.h 796
    ('common', FT_EEPROM_HEADER),
    ('IsHighCurrent', ctypes.c_ubyte),
    ('UseExtOsc', ctypes.c_ubyte),
    ('InvertTXD', ctypes.c_ubyte),
    ('InvertRXD', ctypes.c_ubyte),
    ('InvertRTS', ctypes.c_ubyte),
    ('InvertCTS', ctypes.c_ubyte),
    ('InvertDTR', ctypes.c_ubyte),
    ('InvertDSR', ctypes.c_ubyte),
    ('InvertDCD', ctypes.c_ubyte),
    ('InvertRI', ctypes.c_ubyte),
    ('Cbus0', ctypes.c_ubyte),
    ('Cbus1', ctypes.c_ubyte),
    ('Cbus2', ctypes.c_ubyte),
    ('Cbus3', ctypes.c_ubyte),
    ('Cbus4', ctypes.c_ubyte),
    ('DriverType', ctypes.c_ubyte),
     ]

# .\ftd2xx.h:818
# .\ftd2xx.h:796
PFT_EEPROM_232R = POINTER_T(struct_ft_eeprom_232r)
# .\ftd2xx.h:818
FT_EEPROM_232R = struct_ft_eeprom_232r
# .\ftd2xx.h:822
class struct_ft_eeprom_2232h(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # .\ftd2xx.h 822
    ('common', FT_EEPROM_HEADER),
    ('ALSlowSlew', ctypes.c_ubyte),
    ('ALSchmittInput', ctypes.c_ubyte),
    ('ALDriveCurrent', ctypes.c_ubyte),
    ('AHSlowSlew', ctypes.c_ubyte),
    ('AHSchmittInput', ctypes.c_ubyte),
    ('AHDriveCurrent', ctypes.c_ubyte),
    ('BLSlowSlew', ctypes.c_ubyte),
    ('BLSchmittInput', ctypes.c_ubyte),
    ('BLDriveCurrent', ctypes.c_ubyte),
    ('BHSlowSlew', ctypes.c_ubyte),
    ('BHSchmittInput', ctypes.c_ubyte),
    ('BHDriveCurrent', ctypes.c_ubyte),
    ('AIsFifo', ctypes.c_ubyte),
    ('AIsFifoTar', ctypes.c_ubyte),
    ('AIsFastSer', ctypes.c_ubyte),
    ('BIsFifo', ctypes.c_ubyte),
    ('BIsFifoTar', ctypes.c_ubyte),
    ('BIsFastSer', ctypes.c_ubyte),
    ('PowerSaveEnable', ctypes.c_ubyte),
    ('ADriverType', ctypes.c_ubyte),
    ('BDriverType', ctypes.c_ubyte),
    ('PADDING_0', ctypes.c_ubyte * 3),
     ]

# .\ftd2xx.h:849
FT_EEPROM_2232H = struct_ft_eeprom_2232h
# .\ftd2xx.h:849
# .\ftd2xx.h:822
PFT_EEPROM_2232H = POINTER_T(struct_ft_eeprom_2232h)
# .\ftd2xx.h:853
class struct_ft_eeprom_4232h(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # .\ftd2xx.h 853
    ('common', FT_EEPROM_HEADER),
    ('ASlowSlew', ctypes.c_ubyte),
    ('ASchmittInput', ctypes.c_ubyte),
    ('ADriveCurrent', ctypes.c_ubyte),
    ('BSlowSlew', ctypes.c_ubyte),
    ('BSchmittInput', ctypes.c_ubyte),
    ('BDriveCurrent', ctypes.c_ubyte),
    ('CSlowSlew', ctypes.c_ubyte),
    ('CSchmittInput', ctypes.c_ubyte),
    ('CDriveCurrent', ctypes.c_ubyte),
    ('DSlowSlew', ctypes.c_ubyte),
    ('DSchmittInput', ctypes.c_ubyte),
    ('DDriveCurrent', ctypes.c_ubyte),
    ('ARIIsTXDEN', ctypes.c_ubyte),
    ('BRIIsTXDEN', ctypes.c_ubyte),
    ('CRIIsTXDEN', ctypes.c_ubyte),
    ('DRIIsTXDEN', ctypes.c_ubyte),
    ('ADriverType', ctypes.c_ubyte),
    ('BDriverType', ctypes.c_ubyte),
    ('CDriverType', ctypes.c_ubyte),
    ('DDriverType', ctypes.c_ubyte),
     ]

# .\ftd2xx.h:879
FT_EEPROM_4232H = struct_ft_eeprom_4232h
# .\ftd2xx.h:879
# .\ftd2xx.h:853
PFT_EEPROM_4232H = POINTER_T(struct_ft_eeprom_4232h)
# .\ftd2xx.h:883
class struct_ft_eeprom_232h(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # .\ftd2xx.h 883
    ('common', FT_EEPROM_HEADER),
    ('ACSlowSlew', ctypes.c_ubyte),
    ('ACSchmittInput', ctypes.c_ubyte),
    ('ACDriveCurrent', ctypes.c_ubyte),
    ('ADSlowSlew', ctypes.c_ubyte),
    ('ADSchmittInput', ctypes.c_ubyte),
    ('ADDriveCurrent', ctypes.c_ubyte),
    ('Cbus0', ctypes.c_ubyte),
    ('Cbus1', ctypes.c_ubyte),
    ('Cbus2', ctypes.c_ubyte),
    ('Cbus3', ctypes.c_ubyte),
    ('Cbus4', ctypes.c_ubyte),
    ('Cbus5', ctypes.c_ubyte),
    ('Cbus6', ctypes.c_ubyte),
    ('Cbus7', ctypes.c_ubyte),
    ('Cbus8', ctypes.c_ubyte),
    ('Cbus9', ctypes.c_ubyte),
    ('FT1248Cpol', ctypes.c_ubyte),
    ('FT1248Lsb', ctypes.c_ubyte),
    ('FT1248FlowControl', ctypes.c_ubyte),
    ('IsFifo', ctypes.c_ubyte),
    ('IsFifoTar', ctypes.c_ubyte),
    ('IsFastSer', ctypes.c_ubyte),
    ('IsFT1248', ctypes.c_ubyte),
    ('PowerSaveEnable', ctypes.c_ubyte),
    ('DriverType', ctypes.c_ubyte),
    ('PADDING_0', ctypes.c_ubyte * 3),
     ]

# .\ftd2xx.h:916
FT_EEPROM_232H = struct_ft_eeprom_232h
# .\ftd2xx.h:916
# .\ftd2xx.h:883
PFT_EEPROM_232H = POINTER_T(struct_ft_eeprom_232h)
# .\ftd2xx.h:920
class struct_ft_eeprom_x_series(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # .\ftd2xx.h 920
    ('common', FT_EEPROM_HEADER),
    ('ACSlowSlew', ctypes.c_ubyte),
    ('ACSchmittInput', ctypes.c_ubyte),
    ('ACDriveCurrent', ctypes.c_ubyte),
    ('ADSlowSlew', ctypes.c_ubyte),
    ('ADSchmittInput', ctypes.c_ubyte),
    ('ADDriveCurrent', ctypes.c_ubyte),
    ('Cbus0', ctypes.c_ubyte),
    ('Cbus1', ctypes.c_ubyte),
    ('Cbus2', ctypes.c_ubyte),
    ('Cbus3', ctypes.c_ubyte),
    ('Cbus4', ctypes.c_ubyte),
    ('Cbus5', ctypes.c_ubyte),
    ('Cbus6', ctypes.c_ubyte),
    ('InvertTXD', ctypes.c_ubyte),
    ('InvertRXD', ctypes.c_ubyte),
    ('InvertRTS', ctypes.c_ubyte),
    ('InvertCTS', ctypes.c_ubyte),
    ('InvertDTR', ctypes.c_ubyte),
    ('InvertDSR', ctypes.c_ubyte),
    ('InvertDCD', ctypes.c_ubyte),
    ('InvertRI', ctypes.c_ubyte),
    ('BCDEnable', ctypes.c_ubyte),
    ('BCDForceCbusPWREN', ctypes.c_ubyte),
    ('BCDDisableSleep', ctypes.c_ubyte),
    ('I2CSlaveAddress', ctypes.c_uint16),
    ('PADDING_0', ctypes.c_ubyte * 2),
    ('I2CDeviceId', ctypes.c_uint32),
    ('I2CDisableSchmitt', ctypes.c_ubyte),
    ('FT1248Cpol', ctypes.c_ubyte),
    ('FT1248Lsb', ctypes.c_ubyte),
    ('FT1248FlowControl', ctypes.c_ubyte),
    ('RS485EchoSuppress', ctypes.c_ubyte),
    ('PowerSaveEnable', ctypes.c_ubyte),
    ('DriverType', ctypes.c_ubyte),
    ('PADDING_1', ctypes.c_ubyte),
     ]

# .\ftd2xx.h:964
FT_EEPROM_X_SERIES = struct_ft_eeprom_x_series
# .\ftd2xx.h:964
# .\ftd2xx.h:920
PFT_EEPROM_X_SERIES = POINTER_T(struct_ft_eeprom_x_series)
# .\ftd2xx.h:968
# .\ftd2xx.h 968
FT_EEPROM_Read = _libraries['ftd2xx.dll'].FT_EEPROM_Read
FT_EEPROM_Read.restype = FT_STATUS
# FT_EEPROM_Read(ftHandle, eepromData, eepromDataSize, Manufacturer, ManufacturerId, Description, SerialNumber)
FT_EEPROM_Read.argtypes = [FT_HANDLE, POINTER_T(None), DWORD, POINTER_T(ctypes.c_char), POINTER_T(ctypes.c_char), POINTER_T(ctypes.c_char), POINTER_T(ctypes.c_char)]
FT_EEPROM_Read.__doc__ = \
    """FT_STATUS FT_EEPROM_Read(FT_HANDLE ftHandle, LP_None eepromData, DWORD eepromDataSize, LP_c_char Manufacturer, LP_c_char ManufacturerId, LP_c_char Description, LP_c_char SerialNumber)
    .\ftd2xx.h:968"""
# .\ftd2xx.h:980
# .\ftd2xx.h 980
FT_EEPROM_Program = _libraries['ftd2xx.dll'].FT_EEPROM_Program
FT_EEPROM_Program.restype = FT_STATUS
# FT_EEPROM_Program(ftHandle, eepromData, eepromDataSize, Manufacturer, ManufacturerId, Description, SerialNumber)
FT_EEPROM_Program.argtypes = [FT_HANDLE, POINTER_T(None), DWORD, POINTER_T(ctypes.c_char), POINTER_T(ctypes.c_char), POINTER_T(ctypes.c_char), POINTER_T(ctypes.c_char)]
FT_EEPROM_Program.__doc__ = \
    """FT_STATUS FT_EEPROM_Program(FT_HANDLE ftHandle, LP_None eepromData, DWORD eepromDataSize, LP_c_char Manufacturer, LP_c_char ManufacturerId, LP_c_char Description, LP_c_char SerialNumber)
    .\ftd2xx.h:980"""
# .\ftd2xx.h:992
# .\ftd2xx.h 992
FT_SetLatencyTimer = _libraries['ftd2xx.dll'].FT_SetLatencyTimer
FT_SetLatencyTimer.restype = FT_STATUS
# FT_SetLatencyTimer(ftHandle, ucLatency)
FT_SetLatencyTimer.argtypes = [FT_HANDLE, UCHAR]
FT_SetLatencyTimer.__doc__ = \
    """FT_STATUS FT_SetLatencyTimer(FT_HANDLE ftHandle, UCHAR ucLatency)
    .\ftd2xx.h:992"""
# .\ftd2xx.h:998
# .\ftd2xx.h 998
FT_GetLatencyTimer = _libraries['ftd2xx.dll'].FT_GetLatencyTimer
FT_GetLatencyTimer.restype = FT_STATUS
# FT_GetLatencyTimer(ftHandle, pucLatency)
FT_GetLatencyTimer.argtypes = [FT_HANDLE, PUCHAR]
FT_GetLatencyTimer.__doc__ = \
    """FT_STATUS FT_GetLatencyTimer(FT_HANDLE ftHandle, PUCHAR pucLatency)
    .\ftd2xx.h:998"""
# .\ftd2xx.h:1004
# .\ftd2xx.h 1004
FT_SetBitMode = _libraries['ftd2xx.dll'].FT_SetBitMode
FT_SetBitMode.restype = FT_STATUS
# FT_SetBitMode(ftHandle, ucMask, ucEnable)
FT_SetBitMode.argtypes = [FT_HANDLE, UCHAR, UCHAR]
FT_SetBitMode.__doc__ = \
    """FT_STATUS FT_SetBitMode(FT_HANDLE ftHandle, UCHAR ucMask, UCHAR ucEnable)
    .\ftd2xx.h:1004"""
# .\ftd2xx.h:1011
# .\ftd2xx.h 1011
FT_GetBitMode = _libraries['ftd2xx.dll'].FT_GetBitMode
FT_GetBitMode.restype = FT_STATUS
# FT_GetBitMode(ftHandle, pucMode)
FT_GetBitMode.argtypes = [FT_HANDLE, PUCHAR]
FT_GetBitMode.__doc__ = \
    """FT_STATUS FT_GetBitMode(FT_HANDLE ftHandle, PUCHAR pucMode)
    .\ftd2xx.h:1011"""
# .\ftd2xx.h:1017
# .\ftd2xx.h 1017
FT_SetUSBParameters = _libraries['ftd2xx.dll'].FT_SetUSBParameters
FT_SetUSBParameters.restype = FT_STATUS
# FT_SetUSBParameters(ftHandle, ulInTransferSize, ulOutTransferSize)
FT_SetUSBParameters.argtypes = [FT_HANDLE, ULONG, ULONG]
FT_SetUSBParameters.__doc__ = \
    """FT_STATUS FT_SetUSBParameters(FT_HANDLE ftHandle, ULONG ulInTransferSize, ULONG ulOutTransferSize)
    .\ftd2xx.h:1017"""
# .\ftd2xx.h:1024
# .\ftd2xx.h 1024
FT_SetDeadmanTimeout = _libraries['ftd2xx.dll'].FT_SetDeadmanTimeout
FT_SetDeadmanTimeout.restype = FT_STATUS
# FT_SetDeadmanTimeout(ftHandle, ulDeadmanTimeout)
FT_SetDeadmanTimeout.argtypes = [FT_HANDLE, ULONG]
FT_SetDeadmanTimeout.__doc__ = \
    """FT_STATUS FT_SetDeadmanTimeout(FT_HANDLE ftHandle, ULONG ulDeadmanTimeout)
    .\ftd2xx.h:1024"""
# .\ftd2xx.h:1053
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\winnt.h:538
PCHAR = POINTER_T(ctypes.c_char)
# .\ftd2xx.h 1053
FT_GetDeviceInfo = _libraries['ftd2xx.dll'].FT_GetDeviceInfo
FT_GetDeviceInfo.restype = FT_STATUS
# FT_GetDeviceInfo(ftHandle, lpftDevice, lpdwID, SerialNumber, Description, Dummy)
FT_GetDeviceInfo.argtypes = [FT_HANDLE, POINTER_T(ctypes.c_uint32), LPDWORD, PCHAR, PCHAR, LPVOID]
FT_GetDeviceInfo.__doc__ = \
    """FT_STATUS FT_GetDeviceInfo(FT_HANDLE ftHandle, LP_c_uint32 lpftDevice, LPDWORD lpdwID, PCHAR SerialNumber, PCHAR Description, LPVOID Dummy)
    .\ftd2xx.h:1053"""
# .\ftd2xx.h:1063
# .\ftd2xx.h 1063
FT_StopInTask = _libraries['ftd2xx.dll'].FT_StopInTask
FT_StopInTask.restype = FT_STATUS
# FT_StopInTask(ftHandle)
FT_StopInTask.argtypes = [FT_HANDLE]
FT_StopInTask.__doc__ = \
    """FT_STATUS FT_StopInTask(FT_HANDLE ftHandle)
    .\ftd2xx.h:1063"""
# .\ftd2xx.h:1068
# .\ftd2xx.h 1068
FT_RestartInTask = _libraries['ftd2xx.dll'].FT_RestartInTask
FT_RestartInTask.restype = FT_STATUS
# FT_RestartInTask(ftHandle)
FT_RestartInTask.argtypes = [FT_HANDLE]
FT_RestartInTask.__doc__ = \
    """FT_STATUS FT_RestartInTask(FT_HANDLE ftHandle)
    .\ftd2xx.h:1068"""
# .\ftd2xx.h:1073
# .\ftd2xx.h 1073
FT_SetResetPipeRetryCount = _libraries['ftd2xx.dll'].FT_SetResetPipeRetryCount
FT_SetResetPipeRetryCount.restype = FT_STATUS
# FT_SetResetPipeRetryCount(ftHandle, dwCount)
FT_SetResetPipeRetryCount.argtypes = [FT_HANDLE, DWORD]
FT_SetResetPipeRetryCount.__doc__ = \
    """FT_STATUS FT_SetResetPipeRetryCount(FT_HANDLE ftHandle, DWORD dwCount)
    .\ftd2xx.h:1073"""
# .\ftd2xx.h:1079
# .\ftd2xx.h 1079
FT_ResetPort = _libraries['ftd2xx.dll'].FT_ResetPort
FT_ResetPort.restype = FT_STATUS
# FT_ResetPort(ftHandle)
FT_ResetPort.argtypes = [FT_HANDLE]
FT_ResetPort.__doc__ = \
    """FT_STATUS FT_ResetPort(FT_HANDLE ftHandle)
    .\ftd2xx.h:1079"""
# .\ftd2xx.h:1084
# .\ftd2xx.h 1084
FT_CyclePort = _libraries['ftd2xx.dll'].FT_CyclePort
FT_CyclePort.restype = FT_STATUS
# FT_CyclePort(ftHandle)
FT_CyclePort.argtypes = [FT_HANDLE]
FT_CyclePort.__doc__ = \
    """FT_STATUS FT_CyclePort(FT_HANDLE ftHandle)
    .\ftd2xx.h:1084"""
# .\ftd2xx.h:1094
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\winnt.h:594
LPCTSTR = POINTER_T(ctypes.c_char)
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\minwinbase.h:50
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\minwinbase.h:46
class struct__SECURITY_ATTRIBUTES(ctypes.Structure):
    pass

LPSECURITY_ATTRIBUTES = POINTER_T(struct__SECURITY_ATTRIBUTES)
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\winnt.h:652
HANDLE = POINTER_T(None)
# .\ftd2xx.h 1094
FT_W32_CreateFile = _libraries['ftd2xx.dll'].FT_W32_CreateFile
FT_W32_CreateFile.restype = FT_HANDLE
# FT_W32_CreateFile(lpszName, dwAccess, dwShareMode, lpSecurityAttributes, dwCreate, dwAttrsAndFlags, hTemplate)
FT_W32_CreateFile.argtypes = [LPCTSTR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD, DWORD, HANDLE]
FT_W32_CreateFile.__doc__ = \
    """FT_HANDLE FT_W32_CreateFile(LPCTSTR lpszName, DWORD dwAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreate, DWORD dwAttrsAndFlags, HANDLE hTemplate)
    .\ftd2xx.h:1094"""
# .\ftd2xx.h:1105
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\shared\minwindef.h:157
BOOL = ctypes.c_int32
# .\ftd2xx.h 1105
FT_W32_CloseHandle = _libraries['ftd2xx.dll'].FT_W32_CloseHandle
FT_W32_CloseHandle.restype = BOOL
# FT_W32_CloseHandle(ftHandle)
FT_W32_CloseHandle.argtypes = [FT_HANDLE]
FT_W32_CloseHandle.__doc__ = \
    """BOOL FT_W32_CloseHandle(FT_HANDLE ftHandle)
    .\ftd2xx.h:1105"""
# .\ftd2xx.h:1110
# .\ftd2xx.h 1110
FT_W32_ReadFile = _libraries['ftd2xx.dll'].FT_W32_ReadFile
FT_W32_ReadFile.restype = BOOL
# FT_W32_ReadFile(ftHandle, lpBuffer, nBufferSize, lpBytesReturned, lpOverlapped)
FT_W32_ReadFile.argtypes = [FT_HANDLE, LPVOID, DWORD, LPDWORD, LPOVERLAPPED]
FT_W32_ReadFile.__doc__ = \
    """BOOL FT_W32_ReadFile(FT_HANDLE ftHandle, LPVOID lpBuffer, DWORD nBufferSize, LPDWORD lpBytesReturned, LPOVERLAPPED lpOverlapped)
    .\ftd2xx.h:1110"""
# .\ftd2xx.h:1119
# .\ftd2xx.h 1119
FT_W32_WriteFile = _libraries['ftd2xx.dll'].FT_W32_WriteFile
FT_W32_WriteFile.restype = BOOL
# FT_W32_WriteFile(ftHandle, lpBuffer, nBufferSize, lpBytesWritten, lpOverlapped)
FT_W32_WriteFile.argtypes = [FT_HANDLE, LPVOID, DWORD, LPDWORD, LPOVERLAPPED]
FT_W32_WriteFile.__doc__ = \
    """BOOL FT_W32_WriteFile(FT_HANDLE ftHandle, LPVOID lpBuffer, DWORD nBufferSize, LPDWORD lpBytesWritten, LPOVERLAPPED lpOverlapped)
    .\ftd2xx.h:1119"""
# .\ftd2xx.h:1128
# .\ftd2xx.h 1128
FT_W32_GetLastError = _libraries['ftd2xx.dll'].FT_W32_GetLastError
FT_W32_GetLastError.restype = DWORD
# FT_W32_GetLastError(ftHandle)
FT_W32_GetLastError.argtypes = [FT_HANDLE]
FT_W32_GetLastError.__doc__ = \
    """DWORD FT_W32_GetLastError(FT_HANDLE ftHandle)
    .\ftd2xx.h:1128"""
# .\ftd2xx.h:1133
# .\ftd2xx.h 1133
FT_W32_GetOverlappedResult = _libraries['ftd2xx.dll'].FT_W32_GetOverlappedResult
FT_W32_GetOverlappedResult.restype = BOOL
# FT_W32_GetOverlappedResult(ftHandle, lpOverlapped, lpdwBytesTransferred, bWait)
FT_W32_GetOverlappedResult.argtypes = [FT_HANDLE, LPOVERLAPPED, LPDWORD, BOOL]
FT_W32_GetOverlappedResult.__doc__ = \
    """BOOL FT_W32_GetOverlappedResult(FT_HANDLE ftHandle, LPOVERLAPPED lpOverlapped, LPDWORD lpdwBytesTransferred, BOOL bWait)
    .\ftd2xx.h:1133"""
# .\ftd2xx.h:1141
# .\ftd2xx.h 1141
FT_W32_CancelIo = _libraries['ftd2xx.dll'].FT_W32_CancelIo
FT_W32_CancelIo.restype = BOOL
# FT_W32_CancelIo(ftHandle)
FT_W32_CancelIo.argtypes = [FT_HANDLE]
FT_W32_CancelIo.__doc__ = \
    """BOOL FT_W32_CancelIo(FT_HANDLE ftHandle)
    .\ftd2xx.h:1141"""
# .\ftd2xx.h:1149
class struct__FTCOMSTAT(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # .\ftd2xx.h 1149
    ('fCtsHold', ctypes.c_uint32, 1),
    ('fDsrHold', ctypes.c_uint32, 1),
    ('fRlsdHold', ctypes.c_uint32, 1),
    ('fXoffHold', ctypes.c_uint32, 1),
    ('fXoffSent', ctypes.c_uint32, 1),
    ('fEof', ctypes.c_uint32, 1),
    ('fTxim', ctypes.c_uint32, 1),
    ('fReserved', ctypes.c_uint32, 25),
    ('cbInQue', ctypes.c_uint32),
    ('cbOutQue', ctypes.c_uint32),
     ]

# .\ftd2xx.h:1160
FTCOMSTAT = struct__FTCOMSTAT
# .\ftd2xx.h:1160
# .\ftd2xx.h:1149
LPFTCOMSTAT = POINTER_T(struct__FTCOMSTAT)
# .\ftd2xx.h:1162
class struct__FTDCB(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # .\ftd2xx.h 1162
    ('DCBlength', ctypes.c_uint32),
    ('BaudRate', ctypes.c_uint32),
    ('fBinary', ctypes.c_uint32, 1),
    ('fParity', ctypes.c_uint32, 1),
    ('fOutxCtsFlow', ctypes.c_uint32, 1),
    ('fOutxDsrFlow', ctypes.c_uint32, 1),
    ('fDtrControl', ctypes.c_uint32, 2),
    ('fDsrSensitivity', ctypes.c_uint32, 1),
    ('fTXContinueOnXoff', ctypes.c_uint32, 1),
    ('fOutX', ctypes.c_uint32, 1),
    ('fInX', ctypes.c_uint32, 1),
    ('fErrorChar', ctypes.c_uint32, 1),
    ('fNull', ctypes.c_uint32, 1),
    ('fRtsControl', ctypes.c_uint32, 2),
    ('fAbortOnError', ctypes.c_uint32, 1),
    ('fDummy2', ctypes.c_uint32, 17),
    ('wReserved', ctypes.c_uint16),
    ('XonLim', ctypes.c_uint16),
    ('XoffLim', ctypes.c_uint16),
    ('ByteSize', ctypes.c_ubyte),
    ('Parity', ctypes.c_ubyte),
    ('StopBits', ctypes.c_ubyte),
    ('XonChar', ctypes.c_char),
    ('XoffChar', ctypes.c_char),
    ('ErrorChar', ctypes.c_char),
    ('EofChar', ctypes.c_char),
    ('EvtChar', ctypes.c_char),
    ('wReserved1', ctypes.c_uint16),
     ]

# .\ftd2xx.h:1191
FTDCB = struct__FTDCB
# .\ftd2xx.h:1191
# .\ftd2xx.h:1162
LPFTDCB = POINTER_T(struct__FTDCB)
# .\ftd2xx.h:1193
class struct__FTTIMEOUTS(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # .\ftd2xx.h 1193
    ('ReadIntervalTimeout', ctypes.c_uint32),
    ('ReadTotalTimeoutMultiplier', ctypes.c_uint32),
    ('ReadTotalTimeoutConstant', ctypes.c_uint32),
    ('WriteTotalTimeoutMultiplier', ctypes.c_uint32),
    ('WriteTotalTimeoutConstant', ctypes.c_uint32),
     ]

# .\ftd2xx.h:1199
FTTIMEOUTS = struct__FTTIMEOUTS
# .\ftd2xx.h:1199
# .\ftd2xx.h:1193
LPFTTIMEOUTS = POINTER_T(struct__FTTIMEOUTS)
# .\ftd2xx.h:1203
# .\ftd2xx.h 1203
FT_W32_ClearCommBreak = _libraries['ftd2xx.dll'].FT_W32_ClearCommBreak
FT_W32_ClearCommBreak.restype = BOOL
# FT_W32_ClearCommBreak(ftHandle)
FT_W32_ClearCommBreak.argtypes = [FT_HANDLE]
FT_W32_ClearCommBreak.__doc__ = \
    """BOOL FT_W32_ClearCommBreak(FT_HANDLE ftHandle)
    .\ftd2xx.h:1203"""
# .\ftd2xx.h:1208
# .\ftd2xx.h 1208
FT_W32_ClearCommError = _libraries['ftd2xx.dll'].FT_W32_ClearCommError
FT_W32_ClearCommError.restype = BOOL
# FT_W32_ClearCommError(ftHandle, lpdwErrors, lpftComstat)
FT_W32_ClearCommError.argtypes = [FT_HANDLE, LPDWORD, LPFTCOMSTAT]
FT_W32_ClearCommError.__doc__ = \
    """BOOL FT_W32_ClearCommError(FT_HANDLE ftHandle, LPDWORD lpdwErrors, LPFTCOMSTAT lpftComstat)
    .\ftd2xx.h:1208"""
# .\ftd2xx.h:1215
# .\ftd2xx.h 1215
FT_W32_EscapeCommFunction = _libraries['ftd2xx.dll'].FT_W32_EscapeCommFunction
FT_W32_EscapeCommFunction.restype = BOOL
# FT_W32_EscapeCommFunction(ftHandle, dwFunc)
FT_W32_EscapeCommFunction.argtypes = [FT_HANDLE, DWORD]
FT_W32_EscapeCommFunction.__doc__ = \
    """BOOL FT_W32_EscapeCommFunction(FT_HANDLE ftHandle, DWORD dwFunc)
    .\ftd2xx.h:1215"""
# .\ftd2xx.h:1221
# .\ftd2xx.h 1221
FT_W32_GetCommModemStatus = _libraries['ftd2xx.dll'].FT_W32_GetCommModemStatus
FT_W32_GetCommModemStatus.restype = BOOL
# FT_W32_GetCommModemStatus(ftHandle, lpdwModemStatus)
FT_W32_GetCommModemStatus.argtypes = [FT_HANDLE, LPDWORD]
FT_W32_GetCommModemStatus.__doc__ = \
    """BOOL FT_W32_GetCommModemStatus(FT_HANDLE ftHandle, LPDWORD lpdwModemStatus)
    .\ftd2xx.h:1221"""
# .\ftd2xx.h:1227
# .\ftd2xx.h 1227
FT_W32_GetCommState = _libraries['ftd2xx.dll'].FT_W32_GetCommState
FT_W32_GetCommState.restype = BOOL
# FT_W32_GetCommState(ftHandle, lpftDcb)
FT_W32_GetCommState.argtypes = [FT_HANDLE, LPFTDCB]
FT_W32_GetCommState.__doc__ = \
    """BOOL FT_W32_GetCommState(FT_HANDLE ftHandle, LPFTDCB lpftDcb)
    .\ftd2xx.h:1227"""
# .\ftd2xx.h:1233
# .\ftd2xx.h:1193
# .\ftd2xx.h 1233
FT_W32_GetCommTimeouts = _libraries['ftd2xx.dll'].FT_W32_GetCommTimeouts
FT_W32_GetCommTimeouts.restype = BOOL
# FT_W32_GetCommTimeouts(ftHandle, pTimeouts)
FT_W32_GetCommTimeouts.argtypes = [FT_HANDLE, POINTER_T(struct__FTTIMEOUTS)]
FT_W32_GetCommTimeouts.__doc__ = \
    """BOOL FT_W32_GetCommTimeouts(FT_HANDLE ftHandle, LP_struct__FTTIMEOUTS pTimeouts)
    .\ftd2xx.h:1233"""
# .\ftd2xx.h:1239
# .\ftd2xx.h 1239
FT_W32_PurgeComm = _libraries['ftd2xx.dll'].FT_W32_PurgeComm
FT_W32_PurgeComm.restype = BOOL
# FT_W32_PurgeComm(ftHandle, dwMask)
FT_W32_PurgeComm.argtypes = [FT_HANDLE, DWORD]
FT_W32_PurgeComm.__doc__ = \
    """BOOL FT_W32_PurgeComm(FT_HANDLE ftHandle, DWORD dwMask)
    .\ftd2xx.h:1239"""
# .\ftd2xx.h:1245
# .\ftd2xx.h 1245
FT_W32_SetCommBreak = _libraries['ftd2xx.dll'].FT_W32_SetCommBreak
FT_W32_SetCommBreak.restype = BOOL
# FT_W32_SetCommBreak(ftHandle)
FT_W32_SetCommBreak.argtypes = [FT_HANDLE]
FT_W32_SetCommBreak.__doc__ = \
    """BOOL FT_W32_SetCommBreak(FT_HANDLE ftHandle)
    .\ftd2xx.h:1245"""
# .\ftd2xx.h:1250
# .\ftd2xx.h 1250
FT_W32_SetCommMask = _libraries['ftd2xx.dll'].FT_W32_SetCommMask
FT_W32_SetCommMask.restype = BOOL
# FT_W32_SetCommMask(ftHandle, ulEventMask)
FT_W32_SetCommMask.argtypes = [FT_HANDLE, ULONG]
FT_W32_SetCommMask.__doc__ = \
    """BOOL FT_W32_SetCommMask(FT_HANDLE ftHandle, ULONG ulEventMask)
    .\ftd2xx.h:1250"""
# .\ftd2xx.h:1256
# .\ftd2xx.h 1256
FT_W32_GetCommMask = _libraries['ftd2xx.dll'].FT_W32_GetCommMask
FT_W32_GetCommMask.restype = BOOL
# FT_W32_GetCommMask(ftHandle, lpdwEventMask)
FT_W32_GetCommMask.argtypes = [FT_HANDLE, LPDWORD]
FT_W32_GetCommMask.__doc__ = \
    """BOOL FT_W32_GetCommMask(FT_HANDLE ftHandle, LPDWORD lpdwEventMask)
    .\ftd2xx.h:1256"""
# .\ftd2xx.h:1262
# .\ftd2xx.h 1262
FT_W32_SetCommState = _libraries['ftd2xx.dll'].FT_W32_SetCommState
FT_W32_SetCommState.restype = BOOL
# FT_W32_SetCommState(ftHandle, lpftDcb)
FT_W32_SetCommState.argtypes = [FT_HANDLE, LPFTDCB]
FT_W32_SetCommState.__doc__ = \
    """BOOL FT_W32_SetCommState(FT_HANDLE ftHandle, LPFTDCB lpftDcb)
    .\ftd2xx.h:1262"""
# .\ftd2xx.h:1268
# .\ftd2xx.h:1193
# .\ftd2xx.h 1268
FT_W32_SetCommTimeouts = _libraries['ftd2xx.dll'].FT_W32_SetCommTimeouts
FT_W32_SetCommTimeouts.restype = BOOL
# FT_W32_SetCommTimeouts(ftHandle, pTimeouts)
FT_W32_SetCommTimeouts.argtypes = [FT_HANDLE, POINTER_T(struct__FTTIMEOUTS)]
FT_W32_SetCommTimeouts.__doc__ = \
    """BOOL FT_W32_SetCommTimeouts(FT_HANDLE ftHandle, LP_struct__FTTIMEOUTS pTimeouts)
    .\ftd2xx.h:1268"""
# .\ftd2xx.h:1274
# .\ftd2xx.h 1274
FT_W32_SetupComm = _libraries['ftd2xx.dll'].FT_W32_SetupComm
FT_W32_SetupComm.restype = BOOL
# FT_W32_SetupComm(ftHandle, dwReadBufferSize, dwWriteBufferSize)
FT_W32_SetupComm.argtypes = [FT_HANDLE, DWORD, DWORD]
FT_W32_SetupComm.__doc__ = \
    """BOOL FT_W32_SetupComm(FT_HANDLE ftHandle, DWORD dwReadBufferSize, DWORD dwWriteBufferSize)
    .\ftd2xx.h:1274"""
# .\ftd2xx.h:1281
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\shared\minwindef.h:52
PULONG = POINTER_T(ctypes.c_uint32)
# .\ftd2xx.h 1281
FT_W32_WaitCommEvent = _libraries['ftd2xx.dll'].FT_W32_WaitCommEvent
FT_W32_WaitCommEvent.restype = BOOL
# FT_W32_WaitCommEvent(ftHandle, pulEvent, lpOverlapped)
FT_W32_WaitCommEvent.argtypes = [FT_HANDLE, PULONG, LPOVERLAPPED]
FT_W32_WaitCommEvent.__doc__ = \
    """BOOL FT_W32_WaitCommEvent(FT_HANDLE ftHandle, PULONG pulEvent, LPOVERLAPPED lpOverlapped)
    .\ftd2xx.h:1281"""
# .\ftd2xx.h:1292
class struct__ft_device_list_info_node(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # .\ftd2xx.h 1292
    ('Flags', ctypes.c_uint32),
    ('Type', ctypes.c_uint32),
    ('ID', ctypes.c_uint32),
    ('LocId', ctypes.c_uint32),
    ('SerialNumber', ctypes.c_char * 16),
    ('Description', ctypes.c_char * 64),
    ('ftHandle', POINTER_T(None)),
     ]

# .\ftd2xx.h:1300
FT_DEVICE_LIST_INFO_NODE = struct__ft_device_list_info_node
# .\ftd2xx.h:1303

FT_CreateDeviceInfoList = _libraries['ftd2xx.dll'].FT_CreateDeviceInfoList
FT_CreateDeviceInfoList.restype = FT_STATUS
# FT_CreateDeviceInfoList(lpdwNumDevs)
FT_CreateDeviceInfoList.argtypes = [LPDWORD]
FT_CreateDeviceInfoList.__doc__ = \
    """FT_STATUS FT_CreateDeviceInfoList(LPDWORD lpdwNumDevs)
    .\ftd2xx.h:1310"""
# .\ftd2xx.h:1315
# .\ftd2xx.h:1292
# .\ftd2xx.h 1315
FT_GetDeviceInfoList = _libraries['ftd2xx.dll'].FT_GetDeviceInfoList
FT_GetDeviceInfoList.restype = FT_STATUS
# FT_GetDeviceInfoList(pDest, lpdwNumDevs)
FT_GetDeviceInfoList.argtypes = [POINTER_T(struct__ft_device_list_info_node), LPDWORD]
FT_GetDeviceInfoList.__doc__ = \
    """FT_STATUS FT_GetDeviceInfoList(LP_struct__ft_device_list_info_node pDest, LPDWORD lpdwNumDevs)
    .\ftd2xx.h:1315"""
# .\ftd2xx.h:1321
# .\ftd2xx.h 1321
FT_GetDeviceInfoDetail = _libraries['ftd2xx.dll'].FT_GetDeviceInfoDetail
FT_GetDeviceInfoDetail.restype = FT_STATUS
# FT_GetDeviceInfoDetail(dwIndex, lpdwFlags, lpdwType, lpdwID, lpdwLocId, lpSerialNumber, lpDescription, pftHandle)
FT_GetDeviceInfoDetail.argtypes = [DWORD, LPDWORD, LPDWORD, LPDWORD, LPDWORD, LPVOID, LPVOID, POINTER_T(POINTER_T(None))]
FT_GetDeviceInfoDetail.__doc__ = \
    """FT_STATUS FT_GetDeviceInfoDetail(DWORD dwIndex, LPDWORD lpdwFlags, LPDWORD lpdwType, LPDWORD lpdwID, LPDWORD lpdwLocId, LPVOID lpSerialNumber, LPVOID lpDescription, LP_LP_None pftHandle)
    .\ftd2xx.h:1321"""
# .\ftd2xx.h:1338
# .\ftd2xx.h 1338
FT_GetDriverVersion = _libraries['ftd2xx.dll'].FT_GetDriverVersion
FT_GetDriverVersion.restype = FT_STATUS
# FT_GetDriverVersion(ftHandle, lpdwVersion)
FT_GetDriverVersion.argtypes = [FT_HANDLE, LPDWORD]
FT_GetDriverVersion.__doc__ = \
    """FT_STATUS FT_GetDriverVersion(FT_HANDLE ftHandle, LPDWORD lpdwVersion)
    .\ftd2xx.h:1338"""
# .\ftd2xx.h:1344
# .\ftd2xx.h 1344
FT_GetLibraryVersion = _libraries['ftd2xx.dll'].FT_GetLibraryVersion
FT_GetLibraryVersion.restype = FT_STATUS
# FT_GetLibraryVersion(lpdwVersion)
FT_GetLibraryVersion.argtypes = [LPDWORD]
FT_GetLibraryVersion.__doc__ = \
    """FT_STATUS FT_GetLibraryVersion(LPDWORD lpdwVersion)
    .\ftd2xx.h:1344"""
# .\ftd2xx.h:1350
# .\ftd2xx.h 1350
FT_Rescan = _libraries['ftd2xx.dll'].FT_Rescan
FT_Rescan.restype = FT_STATUS
# FT_Rescan()
FT_Rescan.argtypes = []
FT_Rescan.__doc__ = \
    """FT_STATUS FT_Rescan()
    .\ftd2xx.h:1350"""
# .\ftd2xx.h:1355
# .\ftd2xx.h 1355
FT_Reload = _libraries['ftd2xx.dll'].FT_Reload
FT_Reload.restype = FT_STATUS
# FT_Reload(wVid, wPid)
FT_Reload.argtypes = [WORD, WORD]
FT_Reload.__doc__ = \
    """FT_STATUS FT_Reload(WORD wVid, WORD wPid)
    .\ftd2xx.h:1355"""
# .\ftd2xx.h:1361
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\shared\minwindef.h:170
LPLONG = POINTER_T(ctypes.c_int32)
# .\ftd2xx.h 1361
FT_GetComPortNumber = _libraries['ftd2xx.dll'].FT_GetComPortNumber
FT_GetComPortNumber.restype = FT_STATUS
# FT_GetComPortNumber(ftHandle, lpdwComPortNumber)
FT_GetComPortNumber.argtypes = [FT_HANDLE, LPLONG]
FT_GetComPortNumber.__doc__ = \
    """FT_STATUS FT_GetComPortNumber(FT_HANDLE ftHandle, LPLONG lpdwComPortNumber)
    .\ftd2xx.h:1361"""
# .\ftd2xx.h:1372
# .\ftd2xx.h 1372
FT_EE_ReadConfig = _libraries['ftd2xx.dll'].FT_EE_ReadConfig
FT_EE_ReadConfig.restype = FT_STATUS
# FT_EE_ReadConfig(ftHandle, ucAddress, pucValue)
FT_EE_ReadConfig.argtypes = [FT_HANDLE, UCHAR, PUCHAR]
FT_EE_ReadConfig.__doc__ = \
    """FT_STATUS FT_EE_ReadConfig(FT_HANDLE ftHandle, UCHAR ucAddress, PUCHAR pucValue)
    .\ftd2xx.h:1372"""
# .\ftd2xx.h:1379
# .\ftd2xx.h 1379
FT_EE_WriteConfig = _libraries['ftd2xx.dll'].FT_EE_WriteConfig
FT_EE_WriteConfig.restype = FT_STATUS
# FT_EE_WriteConfig(ftHandle, ucAddress, ucValue)
FT_EE_WriteConfig.argtypes = [FT_HANDLE, UCHAR, UCHAR]
FT_EE_WriteConfig.__doc__ = \
    """FT_STATUS FT_EE_WriteConfig(FT_HANDLE ftHandle, UCHAR ucAddress, UCHAR ucValue)
    .\ftd2xx.h:1379"""
# .\ftd2xx.h:1386
# .\ftd2xx.h 1386
FT_EE_ReadECC = _libraries['ftd2xx.dll'].FT_EE_ReadECC
FT_EE_ReadECC.restype = FT_STATUS
# FT_EE_ReadECC(ftHandle, ucOption, lpwValue)
FT_EE_ReadECC.argtypes = [FT_HANDLE, UCHAR, LPWORD]
FT_EE_ReadECC.__doc__ = \
    """FT_STATUS FT_EE_ReadECC(FT_HANDLE ftHandle, UCHAR ucOption, LPWORD lpwValue)
    .\ftd2xx.h:1386"""
# .\ftd2xx.h:1393
# .\ftd2xx.h 1393
FT_GetQueueStatusEx = _libraries['ftd2xx.dll'].FT_GetQueueStatusEx
FT_GetQueueStatusEx.restype = FT_STATUS
# FT_GetQueueStatusEx(ftHandle, dwRxBytes)
FT_GetQueueStatusEx.argtypes = [FT_HANDLE, POINTER_T(ctypes.c_uint32)]
FT_GetQueueStatusEx.__doc__ = \
    """FT_STATUS FT_GetQueueStatusEx(FT_HANDLE ftHandle, LP_c_uint32 dwRxBytes)
    .\ftd2xx.h:1393"""
# .\ftd2xx.h:1399
# .\ftd2xx.h 1399
FT_ComPortIdle = _libraries['ftd2xx.dll'].FT_ComPortIdle
FT_ComPortIdle.restype = FT_STATUS
# FT_ComPortIdle(ftHandle)
FT_ComPortIdle.argtypes = [FT_HANDLE]
FT_ComPortIdle.__doc__ = \
    """FT_STATUS FT_ComPortIdle(FT_HANDLE ftHandle)
    .\ftd2xx.h:1399"""
# .\ftd2xx.h:1404
# .\ftd2xx.h 1404
FT_ComPortCancelIdle = _libraries['ftd2xx.dll'].FT_ComPortCancelIdle
FT_ComPortCancelIdle.restype = FT_STATUS
# FT_ComPortCancelIdle(ftHandle)
FT_ComPortCancelIdle.argtypes = [FT_HANDLE]
FT_ComPortCancelIdle.__doc__ = \
    """FT_STATUS FT_ComPortCancelIdle(FT_HANDLE ftHandle)
    .\ftd2xx.h:1404"""
# .\ftd2xx.h:1409
# .\ftd2xx.h 1409
FT_VendorCmdGet = _libraries['ftd2xx.dll'].FT_VendorCmdGet
FT_VendorCmdGet.restype = FT_STATUS
# FT_VendorCmdGet(ftHandle, Request, Buf, Len)
FT_VendorCmdGet.argtypes = [FT_HANDLE, UCHAR, POINTER_T(ctypes.c_ubyte), USHORT]
FT_VendorCmdGet.__doc__ = \
    """FT_STATUS FT_VendorCmdGet(FT_HANDLE ftHandle, UCHAR Request, LP_c_ubyte Buf, USHORT Len)
    .\ftd2xx.h:1409"""
# .\ftd2xx.h:1417
# .\ftd2xx.h 1417
FT_VendorCmdSet = _libraries['ftd2xx.dll'].FT_VendorCmdSet
FT_VendorCmdSet.restype = FT_STATUS
# FT_VendorCmdSet(ftHandle, Request, Buf, Len)
FT_VendorCmdSet.argtypes = [FT_HANDLE, UCHAR, POINTER_T(ctypes.c_ubyte), USHORT]
FT_VendorCmdSet.__doc__ = \
    """FT_STATUS FT_VendorCmdSet(FT_HANDLE ftHandle, UCHAR Request, LP_c_ubyte Buf, USHORT Len)
    .\ftd2xx.h:1417"""
# .\ftd2xx.h:1425
# .\ftd2xx.h 1425
FT_VendorCmdGetEx = _libraries['ftd2xx.dll'].FT_VendorCmdGetEx
FT_VendorCmdGetEx.restype = FT_STATUS
# FT_VendorCmdGetEx(ftHandle, wValue, Buf, Len)
FT_VendorCmdGetEx.argtypes = [FT_HANDLE, USHORT, POINTER_T(ctypes.c_ubyte), USHORT]
FT_VendorCmdGetEx.__doc__ = \
    """FT_STATUS FT_VendorCmdGetEx(FT_HANDLE ftHandle, USHORT wValue, LP_c_ubyte Buf, USHORT Len)
    .\ftd2xx.h:1425"""
# .\ftd2xx.h:1433
# .\ftd2xx.h 1433
FT_VendorCmdSetEx = _libraries['ftd2xx.dll'].FT_VendorCmdSetEx
FT_VendorCmdSetEx.restype = FT_STATUS
# FT_VendorCmdSetEx(ftHandle, wValue, Buf, Len)
FT_VendorCmdSetEx.argtypes = [FT_HANDLE, USHORT, POINTER_T(ctypes.c_ubyte), USHORT]
FT_VendorCmdSetEx.__doc__ = \
    """FT_STATUS FT_VendorCmdSetEx(FT_HANDLE ftHandle, USHORT wValue, LP_c_ubyte Buf, USHORT Len)
    .\ftd2xx.h:1433"""
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\minwinbase.h:46
struct__SECURITY_ATTRIBUTES._pack_ = True # source:False
struct__SECURITY_ATTRIBUTES._fields_ = [
    # C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\minwinbase.h 46
    ('nLength', ctypes.c_uint32),
    ('PADDING_0', ctypes.c_ubyte * 4),
    ('lpSecurityDescriptor', POINTER_T(None)),
    ('bInheritHandle', ctypes.c_int32),
    ('PADDING_1', ctypes.c_ubyte * 4),
]

# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\minwinbase.h:52
# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\minwinbase.h:55
class union__OVERLAPPED_0(ctypes.Union):
    pass

# C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\minwinbase.h:56
class struct__OVERLAPPED_0_0(ctypes.Structure):
    _pack_ = True # source:False
    _fields_ = [
    # C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\minwinbase.h 56
    ('Offset', ctypes.c_uint32),
    ('OffsetHigh', ctypes.c_uint32),
     ]

union__OVERLAPPED_0._pack_ = True # source:False
union__OVERLAPPED_0._fields_ = [
    # C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\minwinbase.h 55
    ('_0', struct__OVERLAPPED_0_0),
    ('Pointer', POINTER_T(None)),
]

struct__OVERLAPPED._pack_ = True # source:False
struct__OVERLAPPED._fields_ = [
    # C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\um\minwinbase.h 52
    ('Internal', ctypes.c_uint64),
    ('InternalHigh', ctypes.c_uint64),
    ('_2', union__OVERLAPPED_0),
    ('hEvent', POINTER_T(None)),
]

__all__ = \
    ['BOOL', 'DWORD', 'FTCOMSTAT', 'FTDCB', 'FTTIMEOUTS', 'FT_Close',
    'FT_ClrDtr', 'FT_ClrRts', 'FT_ComPortCancelIdle',
    'FT_ComPortIdle', 'FT_CreateDeviceInfoList', 'FT_CyclePort',
    'FT_DEVICE', 'FT_DEVICE_100AX', 'FT_DEVICE_2232C',
    'FT_DEVICE_2232H', 'FT_DEVICE_232H', 'FT_DEVICE_232R',
    'FT_DEVICE_4222H_0', 'FT_DEVICE_4222H_1_2', 'FT_DEVICE_4222H_3',
    'FT_DEVICE_4222_PROG', 'FT_DEVICE_4232H', 'FT_DEVICE_900',
    'FT_DEVICE_930', 'FT_DEVICE_AM', 'FT_DEVICE_BM',
    'FT_DEVICE_LIST_INFO_NODE', 'FT_DEVICE_LIST_NOT_READY',
    'FT_DEVICE_NOT_FOUND', 'FT_DEVICE_NOT_OPENED',
    'FT_DEVICE_NOT_OPENED_FOR_ERASE',
    'FT_DEVICE_NOT_OPENED_FOR_WRITE', 'FT_DEVICE_UMFTPD3A',
    'FT_DEVICE_UNKNOWN', 'FT_DEVICE_X_SERIES', 'FT_EEPROM_2232',
    'FT_EEPROM_2232H', 'FT_EEPROM_232B', 'FT_EEPROM_232H',
    'FT_EEPROM_232R', 'FT_EEPROM_4232H', 'FT_EEPROM_ERASE_FAILED',
    'FT_EEPROM_HEADER', 'FT_EEPROM_NOT_PRESENT',
    'FT_EEPROM_NOT_PROGRAMMED', 'FT_EEPROM_Program',
    'FT_EEPROM_READ_FAILED', 'FT_EEPROM_Read',
    'FT_EEPROM_WRITE_FAILED', 'FT_EEPROM_X_SERIES', 'FT_EE_Program',
    'FT_EE_ProgramEx', 'FT_EE_Read', 'FT_EE_ReadConfig',
    'FT_EE_ReadECC', 'FT_EE_ReadEx', 'FT_EE_UARead', 'FT_EE_UASize',
    'FT_EE_UAWrite', 'FT_EE_WriteConfig', 'FT_EraseEE',
    'FT_FAILED_TO_WRITE_DEVICE', 'FT_FLAGS_HISPEED',
    'FT_FLAGS_OPENED', 'FT_GetBitMode', 'FT_GetComPortNumber',
    'FT_GetDeviceInfo', 'FT_GetDeviceInfoDetail',
    'FT_GetDeviceInfoList', 'FT_GetDriverVersion',
    'FT_GetEventStatus', 'FT_GetLatencyTimer', 'FT_GetLibraryVersion',
    'FT_GetModemStatus', 'FT_GetQueueStatus', 'FT_GetQueueStatusEx',
    'FT_GetStatus', 'FT_HANDLE', 'FT_INSUFFICIENT_RESOURCES',
    'FT_INVALID_ARGS', 'FT_INVALID_BAUD_RATE', 'FT_INVALID_HANDLE',
    'FT_INVALID_PARAMETER', 'FT_IO_ERROR', 'FT_IoCtl',
    'FT_ListDevices', 'FT_NOT_SUPPORTED', 'FT_OK', 'FT_OTHER_ERROR',
    'FT_Open', 'FT_OpenEx', 'FT_PROGRAM_DATA', 'FT_Purge', 'FT_Read',
    'FT_ReadEE', 'FT_Reload', 'FT_Rescan', 'FT_ResetDevice',
    'FT_ResetPort', 'FT_RestartInTask', 'FT_STATUS', 'FT_SetBaudRate',
    'FT_SetBitMode', 'FT_SetBreakOff', 'FT_SetBreakOn', 'FT_SetChars',
    'FT_SetDataCharacteristics', 'FT_SetDeadmanTimeout',
    'FT_SetDivisor', 'FT_SetDtr', 'FT_SetEventNotification',
    'FT_SetFlowControl', 'FT_SetLatencyTimer',
    'FT_SetResetPipeRetryCount', 'FT_SetRts', 'FT_SetTimeouts',
    'FT_SetUSBParameters', 'FT_SetWaitMask', 'FT_StopInTask',
    'FT_VendorCmdGet', 'FT_VendorCmdGetEx', 'FT_VendorCmdSet',
    'FT_VendorCmdSetEx', 'FT_W32_CancelIo', 'FT_W32_ClearCommBreak',
    'FT_W32_ClearCommError', 'FT_W32_CloseHandle',
    'FT_W32_CreateFile', 'FT_W32_EscapeCommFunction',
    'FT_W32_GetCommMask', 'FT_W32_GetCommModemStatus',
    'FT_W32_GetCommState', 'FT_W32_GetCommTimeouts',
    'FT_W32_GetLastError', 'FT_W32_GetOverlappedResult',
    'FT_W32_PurgeComm', 'FT_W32_ReadFile', 'FT_W32_SetCommBreak',
    'FT_W32_SetCommMask', 'FT_W32_SetCommState',
    'FT_W32_SetCommTimeouts', 'FT_W32_SetupComm',
    'FT_W32_WaitCommEvent', 'FT_W32_WriteFile', 'FT_WaitOnMask',
    'FT_Write', 'FT_WriteEE', 'HANDLE', 'LPCTSTR', 'LPDWORD',
    'LPFTCOMSTAT', 'LPFTDCB', 'LPFTTIMEOUTS', 'LPLONG',
    'LPOVERLAPPED', 'LPSECURITY_ATTRIBUTES', 'LPVOID', 'LPWORD',
    'PCHAR', 'PFT_EEPROM_2232', 'PFT_EEPROM_2232H', 'PFT_EEPROM_232B',
    'PFT_EEPROM_232H', 'PFT_EEPROM_232R', 'PFT_EEPROM_4232H',
    'PFT_EEPROM_HEADER', 'PFT_EEPROM_X_SERIES', 'PFT_EVENT_HANDLER',
    'PFT_PROGRAM_DATA', 'PUCHAR', 'PULONG', 'PVOID', 'UCHAR', 'ULONG',
    'USHORT', 'WORD', 'c__Ea_FT_DEVICE_BM', 'c__Ea_FT_FLAGS_OPENED',
    'c__Ea_FT_OK', 'struct__FTCOMSTAT', 'struct__FTDCB',
    'struct__FTTIMEOUTS', 'struct__OVERLAPPED',
    'struct__OVERLAPPED_0_0', 'struct__SECURITY_ATTRIBUTES',
    'struct__ft_device_list_info_node', 'struct_ft_eeprom_2232',
    'struct_ft_eeprom_2232h', 'struct_ft_eeprom_232b',
    'struct_ft_eeprom_232h', 'struct_ft_eeprom_232r',
    'struct_ft_eeprom_4232h', 'struct_ft_eeprom_header',
    'struct_ft_eeprom_x_series', 'struct_ft_program_data',
    'union__OVERLAPPED_0']
